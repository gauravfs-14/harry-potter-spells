{"version":3,"sources":["data-viz/RadialChart.jsx","data-viz/CustomRadialChart.jsx","data/bookTitles.js","article-sections/BookProgression.jsx","article-sections/SmallMultiples.jsx","App.js","index.js"],"names":["Chart","styled","OrdinalFrame","props","$sticky","Tooltip","div","RadialChart","data","xAxis","yAxis","width","height","margin","sticky","frameProps","size","type","projection","oAccessor","rAccessor","rScaleType","scaleSqrt","oSort","a","b","aData","bData","pieceClass","d","myClass","toLowerCase","baseMarkProps","transitionDuration","default","renderKey","datapoint","spell","hoverAnnotation","tooltipContent","summary","g","canvasWidth","canvasHeight","$y","$x","svg","bookTitles","1","2","3","4","5","6","7","Wrapper","ScrollamaWrapper","StepWrapper","BookProgression","useState","book","setBook","onStepEnter","offset","_","range","map","key","spells","window","innerWidth","innerHeight","MultipleWrapper","Title","h3","SmallMultiples","GlobalStyle","createGlobalStyle","AppWrapper","App","useEffect","scrollTo","top","behavior","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed575393.chunk.js","sourcesContent":["import React from \"react\";\nimport OrdinalFrame from \"semiotic/lib/OrdinalFrame\";\nimport styled from \"styled-components\";\nimport { scaleSqrt } from \"d3-scale\";\nimport \"./RadialChart.css\";\nimport _ from \"lodash\";\n\nconst Chart = styled(OrdinalFrame)`\n  position: ${(props) => (props.$sticky ? \"sticky\" : null)};\n  top: ${(props) => (props.$sticky ? 0 : null)};\n`;\n\nconst Tooltip = styled.div`\n  display: flex;\n  background-color: white;\n  color: black;\n  border-radius: 10px;\n  height: 80px;\n  width: 180px;\n  justify-content: center;\n  align-items: center;\n  padding: 5px;\n`;\n\nconst RadialChart = ({ data, xAxis, yAxis, width, height, margin, sticky }) => {\n  const frameProps = {\n    /* --- Data --- */\n    data,\n\n    /* --- Size --- */\n    size: [width, height],\n    margin: margin ? margin : 100,\n\n    /* --- Layout --- */\n    type: \"bar\",\n    projection: \"radial\",\n\n    /* --- Process --- */\n    oAccessor: xAxis,\n    rAccessor: yAxis,\n    rScaleType: scaleSqrt(),\n    oSort: (a, b, aData, bData) => bData[0][yAxis] - aData[0][yAxis],\n\n    /* --- Customize --- */\n    pieceClass: (d) => {\n      let myClass = d.type.toLowerCase();\n      if (d[yAxis] < 3) {\n        myClass += \" insignificant\";\n      }\n      return myClass;\n    },\n    baseMarkProps: {\n      transitionDuration: { default: 2000 },\n    },\n    renderKey: (datapoint) => datapoint.spell,\n\n    /* --- Interact --- */\n    hoverAnnotation: true,\n    tooltipContent: (d) => (\n      <Tooltip>\n        {d.summary[0].data[xAxis]} : {d.summary[0].data[yAxis]}\n      </Tooltip>\n    ),\n\n    /* --- Annotate --- */\n    // oLabel: {\n    //   orient: \"stem\",\n    //   padding: 5,\n    //   label: (d) => (\n    //     <text fill=\"white\" fontSize={12}>\n    //       {d}\n    //     </text>\n    //   ),\n    // },\n  };\n\n  return <Chart {...frameProps} $sticky={sticky} />;\n};\n\nexport default RadialChart;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { arc } from \"d3-shape\";\nimport { scaleLinear } from \"d3-scale\";\nimport _ from \"lodash\";\nimport \"./CustomRadialChart.css\";\nimport { useTransition, animated } from \"react-spring\";\n\nconst canvasWidth = 600;\nconst canvasHeight = 600;\nconst margin = 100;\n\nconst Pieces = styled.g`\n  transform: translate(${canvasWidth / 2}px, ${canvasHeight / 2}px);\n`;\n\nconst Tooltip = styled.div`\n  position: absolute;\n  top: ${(props) => props.$y}px;\n  left: ${(props) => props.$x}px;\n  display: flex;\n  background-color: white;\n  color: black;\n  border-radius: 10px;\n  height: 80px;\n  width: 180px;\n  justify-content: center;\n  align-items: center;\n  padding: 5px;\n`;\n\nconst SVGCanvas = styled.svg`\n  margin: ${margin}px;\n  position: sticky;\n  top: ${margin}px;\n`;\n\nconst AnnotationLayer = styled.div``;\n\nconst mostMentions = (data) => {\n  return _.get(\n    _.maxBy(data, (d) => d.mentions),\n    \"mentions\"\n  );\n};\n\nconst Piece = ({\n  data,\n  i,\n  scale,\n  numBars,\n  setHoveredPiece,\n  setMouseX,\n  setMouseY,\n}) => {\n  const arcGenerator = arc()\n    .startAngle(((Math.PI * 2) / numBars) * i)\n    .endAngle(((Math.PI * 2) / numBars) * (i + 1))\n    .innerRadius(0)\n    .outerRadius(scale(data.mentions));\n\n  return (\n    <g\n      className={data.type.toLowerCase()}\n      onMouseEnter={(e) => {\n        setHoveredPiece(data);\n        setMouseX(e.nativeEvent.pageX);\n        setMouseY(e.nativeEvent.pageY);\n      }}\n      onMouseLeave={() => {\n        setHoveredPiece(null);\n        setMouseX(null);\n        setMouseY(null);\n      }}\n    >\n      <path d={arcGenerator()} />\n    </g>\n  );\n};\n\nconst CustomRadialChart = ({ data }) => {\n  const [hoveredPiece, setHoveredPiece] = useState(null);\n  const [mouseX, setMouseX] = useState(null);\n  const [mouseY, setMouseY] = useState(null);\n\n  const scale = scaleLinear()\n    .domain([0, mostMentions(data)])\n    .range([0, canvasWidth / 2]);\n\n  return (\n    <>\n      <SVGCanvas height={canvasHeight} width={canvasWidth}>\n        <Pieces>\n          {_.map(data, (d, i) => (\n            <Piece\n              key={d.spell}\n              data={d}\n              i={i}\n              scale={scale}\n              numBars={data.length}\n              setHoveredPiece={setHoveredPiece}\n              setMouseX={setMouseX}\n              setMouseY={setMouseY}\n            />\n          ))}\n        </Pieces>\n      </SVGCanvas>\n      <AnnotationLayer>\n        {hoveredPiece && (\n          <Tooltip key={hoveredPiece.spell} $x={mouseX} $y={mouseY}>\n            {hoveredPiece.spell} : {hoveredPiece.mentions}\n          </Tooltip>\n        )}\n      </AnnotationLayer>\n    </>\n  );\n};\n\nexport default CustomRadialChart;\n","const bookTitles = {\n  1: \"Harry Potter and the Sorcerer's Stone ⚡️\",\n  2: \"Harry Potter and the Chamber of Secrets 🐍\",\n  3: \"Harry Potter and the Prisoner of Azkaban ⏳\",\n  4: \"Harry Potter and the Goblet of Fire 🏆\",\n  5: \"Harry Potter and the Order of the Phoenix 🔥\",\n  6: \"Harry Potter and the Half-Blood Prince 🧪\",\n  7: \"Harry Potter and the Deathly Hallows ⍋\",\n};\n\nexport default bookTitles;\n","import React, { useState, useEffect } from \"react\";\nimport { Scrollama, Step } from \"react-scrollama\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport RadialChart from \"../data-viz/RadialChart.jsx\";\nimport CustomRadialChart from \"../data-viz/CustomRadialChart.jsx\";\nimport spells from \"../data/spellCounts.json\";\nimport bookTitles from \"../data/bookTitles.js\";\nimport _ from \"lodash\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst ScrollamaWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StepWrapper = styled.div`\n  margin: 50vh 0;\n  font-size: 50px;\n`;\n\nconst BookProgression = () => {\n  const [book, setBook] = useState(null);\n\n  const onStepEnter = ({ data }) => {\n    setBook(data);\n  };\n\n  return (\n    <Wrapper>\n      <ScrollamaWrapper>\n        <Scrollama onStepEnter={onStepEnter} offset={0.5}>\n          {_.range(1, 8).map((book) => (\n            <Step data={book} key={book}>\n              <StepWrapper>{book}</StepWrapper>\n            </Step>\n          ))}\n        </Scrollama>\n      </ScrollamaWrapper>\n      <div>\n        <RadialChart\n          data={spells[book]}\n          xAxis={\"spell\"}\n          yAxis={\"mentions\"}\n          width={window.innerWidth - 100}\n          height={window.innerHeight - 100}\n          sticky={true}\n        />\n        {/* {!_.isEmpty(spells[book]) && <CustomRadialChart data={spells[book]} />} */}\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default BookProgression;\n","import React, { useState, useEffect } from \"react\";\nimport { Scrollama, Step } from \"react-scrollama\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport RadialChart from \"../data-viz/RadialChart.jsx\";\nimport spells from \"../data/spellCounts.json\";\nimport bookTitles from \"../data/bookTitles.js\";\nimport _ from \"lodash\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst MultipleWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Title = styled.h3`\n  text-align: center;\n`;\n\nconst SmallMultiples = () => {\n  return (\n    <Wrapper>\n      {_.range(1, 8).map((book) => (\n        <MultipleWrapper>\n          <Title key={`title-${book}`}>{bookTitles[book]}</Title>\n          <RadialChart\n            key={`chart-${book}`}\n            data={spells[book]}\n            xAxis={\"spell\"}\n            yAxis={\"mentions\"}\n            width={500}\n            height={500}\n            sticky={false}\n            margin={50}\n          />\n        </MultipleWrapper>\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default SmallMultiples;\n","import React, { useEffect } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport _ from \"lodash\";\nimport BookProgression from \"./article-sections/BookProgression.jsx\";\nimport SmallMultiples from \"./article-sections/SmallMultiples.jsx\";\nimport CustomRadialChart from \"./data-viz/CustomRadialChart.jsx\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #302f2c;\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    color: white;\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n`;\n\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nfunction App() {\n  // Scroll to the top on render *smoooooothly*\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  }, []);\n\n  return (\n    <>\n      <GlobalStyle />\n\n      <AppWrapper>\n        <BookProgression />\n        <SmallMultiples />\n      </AppWrapper>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}