{"version":3,"sources":["BarChart.jsx","LineChart.jsx","LineChartV2.jsx","data/data.js","App.js","serviceWorker.js","index.js"],"names":["Chart","styled","OrdinalFrame","prop","stickTo","BarChart","data","xAxis","yAxis","title","frameProps","size","margin","type","oAccessor","rAccessor","style","fill","stroke","oLabel","d","fontSize","transform","XYFrame","LineChartV2","console","log","coordinates","chartWidth","window","innerWidth","dimensions","width","height","xScale","scaleLinear","domain","range","yScale","pathGenerator","line","x","y","strokeWidth","getRandomInt","max","Math","floor","random","spells","1","spell","mentions","2","3","4","5","6","7","characterLines","character","lines","bookPages","bookNum","pages","GlobalStyle","createGlobalStyle","AppWrapper","div","ScrollamaWrapper","StepWrapper","ChartWrapper","App","useState","book","setBook","onStepEnter","offset","map","key","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a7f9f403.chunk.js","sourcesContent":["import React from \"react\";\nimport OrdinalFrame from \"semiotic/lib/OrdinalFrame\";\nimport styled from \"styled-components\";\n\nconst Chart = styled(OrdinalFrame)`\n  position: sticky;\n  top: ${(prop) => (prop.stickTo == \"top\" ? 0 : null)};\n  bottom: ${(prop) => (prop.stickTo == \"bottom\" ? 0 : null)};\n`;\n\nconst BarChart = ({ data, xAxis, yAxis, title, stickTo }) => {\n  const frameProps = {\n    /* --- Data --- */\n    data,\n\n    /* --- Size --- */\n    size: [350, 350],\n    margin: 100,\n\n    /* --- Layout --- */\n    type: \"bar\",\n\n    /* --- Process --- */\n    oAccessor: xAxis,\n    rAccessor: yAxis,\n\n    /* --- Customize --- */\n    style: { fill: \"#2d4c80\", stroke: \"white\" },\n    title,\n\n    /* --- Annotate --- */\n    oLabel: (d) => (\n      <text fontSize={14} transform=\"rotate(45)\">\n        {d}\n      </text>\n    ),\n  };\n\n  return <Chart {...frameProps} stickTo={stickTo} />;\n};\n\nexport default BarChart;\n","import React from \"react\";\nimport XYFrame from \"semiotic/lib/XYFrame\";\nimport styled from \"styled-components\";\n\nconst Chart = styled(XYFrame)`\n  position: sticky;\n  top: ${(prop) => (prop.stickTo == \"top\" ? 0 : null)};\n  bottom: ${(prop) => (prop.stickTo == \"bottom\" ? 0 : null)};\n`;\n\nconst LineChart = ({ data, xAxis, yAxis, title, stickTo }) => {\n  const frameProps = {\n    /* --- Data --- */\n    lines: data,\n\n    /* --- Size --- */\n    size: [400, 400],\n    margin: 70,\n\n    /* --- Layout --- */\n    type: \"bar\",\n\n    /* --- Process --- */\n    xAccessor: xAxis,\n    yAccessor: yAxis,\n\n    /* --- Customize --- */\n    lineStyle: (d, i) => ({\n      stroke: \"#E0488B\",\n      strokeWidth: 2,\n      fill: \"none\",\n    }),\n    title,\n    axes: [\n      {\n        orient: \"left\",\n        label: \"Number of Pages\",\n      },\n      {\n        orient: \"bottom\",\n        label: { name: \"Book Number\", locationDistance: 55 },\n      },\n    ],\n  };\n\n  return <Chart {...frameProps} stickTo={stickTo} />;\n};\n\nexport default LineChart;\n","import React from \"react\";\nimport { line } from \"d3-shape\";\nimport { scaleQuantize, scaleLinear } from \"d3-scale\";\n\nconst LineChartV2 = ({ data, xAxis, yAxis }) => {\n  console.log(data.coordinates);\n\n  const screenWidth = window.innerWidth;\n  const chartWidth = screenWidth / 3;\n  const dimensions = {\n    width: chartWidth,\n    height: chartWidth * 0.85,\n  };\n\n  const xScale = scaleLinear().domain([1, 7]).range([0, dimensions.width]);\n  const yScale = scaleLinear().domain([0, 900]).range([dimensions.height, 0]);\n\n  const pathGenerator = line()\n    .x((d) => xScale(d[xAxis]))\n    .y((d) => yScale(d[yAxis]));\n\n  return (\n    <svg\n      width={dimensions.width}\n      height={dimensions.height}\n      style={{ margin: \"30px\" }}\n    >\n      <path\n        style={{ fill: \"none\", stroke: \"steelblue\", strokeWidth: 1.5 }}\n        d={pathGenerator(data.coordinates)}\n      />\n    </svg>\n  );\n};\n\nexport default LineChartV2;\n","const getRandomInt = (max) => {\n  return Math.floor(Math.random() * Math.floor(max));\n};\n\nconst spells = {\n  1: [\n    { spell: \"Avada Kedavra\", mentions: getRandomInt(100) },\n    { spell: \"Expeliarmus\", mentions: getRandomInt(100) },\n    { spell: \"Levicorpus\", mentions: getRandomInt(100) },\n    { spell: \"Reducto\", mentions: getRandomInt(100) },\n    { spell: \"Lumos\", mentions: getRandomInt(100) },\n  ],\n  2: [\n    { spell: \"Avada Kedavra\", mentions: getRandomInt(100) },\n    { spell: \"Expeliarmus\", mentions: getRandomInt(100) },\n    { spell: \"Levicorpus\", mentions: getRandomInt(100) },\n    { spell: \"Reducto\", mentions: getRandomInt(100) },\n    { spell: \"Lumos\", mentions: getRandomInt(100) },\n  ],\n  3: [\n    { spell: \"Avada Kedavra\", mentions: getRandomInt(100) },\n    { spell: \"Expeliarmus\", mentions: getRandomInt(100) },\n    { spell: \"Levicorpus\", mentions: getRandomInt(100) },\n    { spell: \"Reducto\", mentions: getRandomInt(100) },\n    { spell: \"Lumos\", mentions: getRandomInt(100) },\n  ],\n  4: [\n    { spell: \"Avada Kedavra\", mentions: getRandomInt(100) },\n    { spell: \"Expeliarmus\", mentions: getRandomInt(100) },\n    { spell: \"Levicorpus\", mentions: getRandomInt(100) },\n    { spell: \"Reducto\", mentions: getRandomInt(100) },\n    { spell: \"Lumos\", mentions: getRandomInt(100) },\n  ],\n  5: [\n    { spell: \"Avada Kedavra\", mentions: getRandomInt(100) },\n    { spell: \"Expeliarmus\", mentions: getRandomInt(100) },\n    { spell: \"Levicorpus\", mentions: getRandomInt(100) },\n    { spell: \"Reducto\", mentions: getRandomInt(100) },\n    { spell: \"Lumos\", mentions: getRandomInt(100) },\n  ],\n  6: [\n    { spell: \"Avada Kedavra\", mentions: getRandomInt(100) },\n    { spell: \"Expeliarmus\", mentions: getRandomInt(100) },\n    { spell: \"Levicorpus\", mentions: getRandomInt(100) },\n    { spell: \"Reducto\", mentions: getRandomInt(100) },\n    { spell: \"Lumos\", mentions: getRandomInt(100) },\n  ],\n  7: [\n    { spell: \"Avada Kedavra\", mentions: getRandomInt(100) },\n    { spell: \"Expeliarmus\", mentions: getRandomInt(100) },\n    { spell: \"Levicorpus\", mentions: getRandomInt(100) },\n    { spell: \"Reducto\", mentions: getRandomInt(100) },\n    { spell: \"Lumos\", mentions: getRandomInt(100) },\n  ],\n};\n\nconst characterLines = {\n  1: [\n    { character: \"Harry Potter\", lines: getRandomInt(10000) },\n    { character: \"Ron\", lines: getRandomInt(10000) },\n    { character: \"Hermione\", lines: getRandomInt(10000) },\n  ],\n  2: [\n    { character: \"Harry Potter\", lines: getRandomInt(10000) },\n    { character: \"Ron\", lines: getRandomInt(10000) },\n    { character: \"Hermione\", lines: getRandomInt(10000) },\n  ],\n  3: [\n    { character: \"Harry Potter\", lines: getRandomInt(10000) },\n    { character: \"Ron\", lines: getRandomInt(10000) },\n    { character: \"Hermione\", lines: getRandomInt(10000) },\n  ],\n  4: [\n    { character: \"Harry Potter\", lines: getRandomInt(10000) },\n    { character: \"Ron\", lines: getRandomInt(10000) },\n    { character: \"Hermione\", lines: getRandomInt(10000) },\n  ],\n  5: [\n    { character: \"Harry Potter\", lines: getRandomInt(10000) },\n    { character: \"Ron\", lines: getRandomInt(10000) },\n    { character: \"Hermione\", lines: getRandomInt(10000) },\n  ],\n  6: [\n    { character: \"Harry Potter\", lines: getRandomInt(10000) },\n    { character: \"Ron\", lines: getRandomInt(10000) },\n    { character: \"Hermione\", lines: getRandomInt(10000) },\n  ],\n  7: [\n    { character: \"Harry Potter\", lines: getRandomInt(10000) },\n    { character: \"Ron\", lines: getRandomInt(10000) },\n    { character: \"Hermione\", lines: getRandomInt(10000) },\n  ],\n};\n\nconst bookPages = {\n  title: \"Page Counts\",\n  coordinates: [\n    { bookNum: 1, pages: 309 },\n    { bookNum: 2, pages: 341 },\n    { bookNum: 3, pages: 435 },\n    { bookNum: 4, pages: 734 },\n    { bookNum: 5, pages: 870 },\n    { bookNum: 6, pages: 652 },\n    { bookNum: 7, pages: 759 },\n  ],\n};\n\nconst topWords = {\n  1: [\"dursley\", \"wand\", \"spell\", \"wizard\", \"butterbeer\"],\n  2: [\"bludger\", \"memory\", \"pensieve\", \"quill\", \"elf\"],\n  3: [\"hippogriff\", \"azkaban\", \"escape\", \"dog\", \"map\"],\n  4: [\"goblet\", \"tournament\", \"voldemort\", \"maze\", \"riddle\"],\n  5: [\"oclumency\", \"castle\", \"owl\", \"friends\", \"lake\"],\n  6: [\"squid\", \"quidditch\", \"snogging\", \"lessons\", \"liberation\"],\n  7: [\"love\", \"family\", \"battle\", \"died\", \"green\"],\n};\n\nexport { spells, characterLines, bookPages, topWords };\n","import React, { useState } from \"react\";\nimport { Scrollama, Step } from \"react-scrollama\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport BarChart from \"./BarChart.jsx\";\nimport LineChart from \"./LineChart.jsx\";\nimport LineChartV2 from \"./LineChartV2.jsx\";\nimport _ from \"lodash\";\n\nimport { spells, characterLines, bookPages } from \"./data/data.js\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n`;\n\nconst AppWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ScrollamaWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StepWrapper = styled.div`\n  margin: 50vh 0;\n  font-size: 50px;\n`;\n\nconst ChartWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nfunction App() {\n  const [book, setBook] = useState(null);\n\n  const onStepEnter = ({ data }) => {\n    setBook(data);\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <AppWrapper>\n        <ChartWrapper>\n          <BarChart\n            data={spells[book]}\n            xAxis={\"spell\"}\n            yAxis={\"mentions\"}\n            title=\"Spell Use\"\n            stickTo=\"top\"\n          />\n          <BarChart\n            data={characterLines[book]}\n            xAxis={\"character\"}\n            yAxis={\"lines\"}\n            title=\"Character Lines\"\n            stickTo=\"bottom\"\n          />\n        </ChartWrapper>\n        <ScrollamaWrapper>\n          <Scrollama onStepEnter={onStepEnter} offset={0.5}>\n            {[1, 2, 3, 4, 5, 6, 7].map((book) => (\n              <Step data={book} key={book}>\n                <StepWrapper>{book}</StepWrapper>\n              </Step>\n            ))}\n          </Scrollama>\n        </ScrollamaWrapper>\n        <ChartWrapper>\n          {/* <LineChart\n            data={{\n              title: bookPages.title,\n              coordinates: bookPages.coordinates.slice(0, book),\n            }}\n            xAxis={\"bookNum\"}\n            yAxis={\"pages\"}\n            stickTo=\"top\"\n          /> */}\n          <LineChartV2\n            data={{\n              title: bookPages.title,\n              //coordinates: bookPages.coordinates.slice(0, book),\n              coordinates: bookPages.coordinates,\n            }}\n            xAxis={\"bookNum\"}\n            yAxis={\"pages\"}\n          />\n        </ChartWrapper>\n      </AppWrapper>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}